from django.core.management.base import BaseCommand
from estoque.models import Produto, Categoria

class Command(BaseCommand):
    help = 'Adiciona produtos ao banco de dados'

    def handle(self, *args, **kwargs):
        # Lista de produtos a serem adicionados
        produtos = [
            ('Xiaomi Redmi Note 10', 'Smartphone com câmera de alta resolução e bateria de longa duração.', 299.99, 200.00, 100, 'unidade', '7894561230123', 'Eletrônicos'),
            ('Acer Chromebook', 'Laptop leve e compacto com sistema operacional Chrome OS.', 349.99, 250.00, 50, 'unidade', '1239876543210', 'Eletrônicos'),
            ('Samsung Galaxy Tab S7', 'Tablet com tela Super AMOLED e S Pen para produtividade.', 649.99, 500.00, 30, 'unidade', '4561237890456', 'Eletrônicos'),
            ('Fitbit Charge 5', 'Smartwatch com monitoramento avançado de saúde e GPS integrado.', 179.95, 150.00, 80, 'unidade', '7890123456389', 'Eletrônicos'),
            ('JBL Tune 125TWS', 'Fones de ouvido sem fio com som JBL Pure Bass e autonomia de bateria de até 32 horas.', 79.95, 60.00, 120, 'unidade', '5678901234567', 'Eletrônicos'),
            ('Adidas Originals Hoodie', 'Moletom com capuz da Adidas com logo trefoil.', 60.00, 40.00, 200, 'unidade', '0123456789012', 'Moda'),
            ('New Balance 574 Sneakers', 'Tênis clássico de corrida com entressola ENCAP para suporte e conforto.', 79.99, 60.00, 150, 'unidade', '9012345678901', 'Moda'),
            ('Fossil Rachel Tote', 'Bolsa tote em couro sintético com alças duplas e bolso interno.', 148.00, 100.00, 80, 'unidade', '3456789012345', 'Moda'),
            ('Ray-Ban Aviator Classic', 'Óculos de sol aviador clássicos com lentes polarizadas.', 154.00, 120.00, 100, 'unidade', '6789012345678', 'Moda'),
            ('Seiko 5 Automatic Watch', 'Relógio automático com movimento de 21 joias e reserva de energia de 41 horas.', 199.99, 150.00, 70, 'unidade', '2345678901234', 'Moda'),
            ('IKEA Billy Bookcase', 'Estante em chapa de madeira com cinco prateleiras ajustáveis.', 79.99, 60.00, 120, 'unidade', '4567890123456', 'Casa e Decoração'),
            ('Minted Framed Art Print', 'Impressão em papel de arte de edição limitada em moldura de madeira.', 150.00, 100.00, 50, 'unidade', '7890123456789', 'Casa e Decoração'),
            ('Philips Hue Smart Bulb Starter Kit', 'Kit inicial com lâmpadas LED inteligentes que podem ser controladas por aplicativo ou voz.', 99.99, 80.00, 80, 'unidade', '0123416789012', 'Casa e Decoração'),
            ('Rubbermaid Configurations Closet Kit', 'Sistema de organização de closet personalizável com prateleiras e barras ajustáveis.', 89.99, 70.00, 100, 'unidade', '3456789012325', 'Casa e Decoração'),
            ('Target Threshold Bath Towel Set', 'Conjunto de toalhas de banho em algodão macio e absorvente.', 24.99, 20.00, 200, 'unidade', '6789012349678', 'Casa e Decoração'),
            ('The Ordinary Hyaluronic Acid Serum', 'Sérum hidratante com ácido hialurônico para hidratar e suavizar a pele.', 6.80, 5.00, 300, 'unidade', '9012845678901', 'Beleza e Cuidados Pessoais'),
            ('Maybelline Fit Me Matte + Poreless Foundation', 'Base líquida de cobertura média com acabamento matte para pele oleosa.', 7.99, 6.00, 200, 'unidade', '2345678941234', 'Beleza e Cuidados Pessoais'),
            ('Gucci Bloom Eau de Parfum', 'Perfume floral com notas de tuberosa, jasmim e ylang-ylang.', 130.00, 100.00, 150, 'unidade', '5678901834567', 'Beleza e Cuidados Pessoais'),
            ('SheaMoisture Curl Enhancing Smoothie', 'Creme leave-in para cabelos cacheados para hidratação e definição de cachos.', 13.49, 10.00, 180, 'unidade', '8901234567890', 'Beleza e Cuidados Pessoais'),
            ('Real Techniques Miracle Complexion Sponge', 'Esponja de maquiagem para aplicação de base líquida e corretivo.', 5.99, 4.00, 250, 'unidade', '1234567890123', 'Beleza e Cuidados Pessoais'),
            ('Nature\'s Bounty Vitamin C Gummies', 'Suplemento de vitamina C em forma de gomas mastigáveis com sabor cítrico.', 9.99, 8.00, 400, 'unidade', '3456789012945', 'Saúde e Bem-Estar'),
            ('Bowflex SelectTech Adjustable Dumbbells', 'Halteres ajustáveis com seleção de peso fácil de usar para treino em casa.', 349.99, 300.00, 100, 'par', '6789042345678', 'Saúde e Bem-Estar'),
            ('Dove Beauty Bar', 'Sabonete em barra hidratante para limpeza suave da pele.', 6.49, 5.00, 300, 'unidade', '9012395678901', 'Saúde e Bem-Estar'),
            ('Omron Platinum Blood Pressure Monitor', 'Monitor de pressão arterial automático com braçadeira de braço ajustável.', 64.99, 50.00, 150, 'unidade', '2345678906234', 'Saúde e Bem-Estar'),
            ('Bath & Body Works Eucalyptus Spearmint Candle', 'Vela aromática com aroma calmante de eucalipto e hortelã.', 24.50, 20.00, 200, 'unidade', '5672901234567', 'Saúde e Bem-Estar'),
            ('Wilson NFL Football', 'Bola de futebol americano oficial da NFL em couro composto.', 29.99, 25.00, 100, 'unidade', '7890123456289', 'Esportes e Atividades ao Ar Livre'),
            ('Under Armour Tech 2.0 T-Shirt', 'Camiseta esportiva de manga curta com tecnologia anti-odor e rápida absorção de suor.', 25.00, 20.00, 150, 'unidade', '9012545678901', 'Esportes e Atividades ao Ar Livre'),
            ('Coleman Sundome Tent', 'Barraca de camping compacta para 4 pessoas com sistema de montagem fácil.', 89.99, 70.00, 80, 'unidade', '2345678991234', 'Esportes e Atividades ao Ar Livre'),
            ('Garmin Forerunner 245 GPS Running Watch', 'Relógio esportivo GPS com monitoramento de ritmo cardíaco e estatísticas de corrida.', 299.99, 250.00, 120, 'unidade', '5678901934567', 'Esportes e Atividades ao Ar Livre'),
            ('LEGO Star Wars Imperial Star Destroyer', 'Kit de construção LEGO com 4.784 peças do famoso navio de guerra do Império Galáctico.', 699.99, 600.00, 50, 'unidade', '8901234562890', 'Esportes e Atividades ao Ar Livre'),
            ('The Alchemist by Paulo Coelho', 'Romance filosófico sobre a busca dos sonhos e o destino.', 10.99, 8.00, 200, 'unidade', '1234567890193', 'Livros, Filmes e Música'),
            ('Avengers: Endgame Blu-ray', 'Filme de super-heróis da Marvel Studios em alta definição Blu-ray.', 24.99, 20.00, 100, 'unidade', '4567890123406', 'Livros, Filmes e Música'),
            ('Taylor Swift - Folklore Vinyl', 'Álbum de música em vinil da cantora Taylor Swift.', 27.99, 25.00, 150, 'unidade', '7890123756789', 'Livros, Filmes e Música'),
            ('The Beatles - Abbey Road CD', 'Álbum clássico da banda The Beatles em formato CD.', 12.99, 10.00, 200, 'unidade', '0123456789812', 'Livros, Filmes e Música'),
            ('Harry Potter and the Sorcerer\'s Stone Audiobook', 'Audiolivro narrado do primeiro livro da série Harry Potter.', 29.99, 25.00, 120, 'unidade', '3456789012345', 'Livros, Filmes e Música'),
            ('LEGO Creator Expert Roller Coaster', 'Kit de construção LEGO com montanha-russa motorizada, carrossel e bilheteria.', 379.99, 300.00, 50, 'unidade', '6789012348678', 'Brinquedos e Jogos'),
            ('Pandemic Legacy Season 1', 'Jogo de tabuleiro cooperativo onde os jogadores lutam contra doenças em um cenário de campanha.', 79.99, 60.00, 100, 'unidade', '7890127456789', 'Brinquedos e Jogos'),
            ('EuroGraphics Klimt The Kiss Puzzle 500 Pieces', 'Quebra-cabeça de 500 peças com a obra-prima de Gustav Klimt "O Beijo".', 19.99, 15.00, 120, 'unidade', '8901237567890', 'Brinquedos e Jogos'),
            ('Hot Wheels Track Builder Unlimited Triple Loop Kit', 'Conjunto de pista de corrida Hot Wheels com três loops e lançador de carros.', 29.99, 25.00, 150, 'unidade', '9012345978901', 'Brinquedos e Jogos'),
            ('Nendoroid Naruto Uzumaki Figure', 'Figura colecionável articulada Nendoroid do personagem Naruto Uzumaki.', 59.99, 50.00, 80, 'unidade', '1234567890323', 'Brinquedos e Jogos')
        ]

        # Iterar sobre a lista de produtos e inseri-los no banco de dados
        for produto in produtos:
            nome, descricao, preco_venda, preco_custo, quantidade, unidade_medida, codigo_barras, categoria_nome = produto

            # Obter ou criar a categoria
            categoria, created = Categoria.objects.get_or_create(nome=categoria_nome)

            # Verificar se o produto já existe pelo código de barras
            produto_existente = Produto.objects.filter(codigo_barras=codigo_barras).first()
            if not produto_existente:
                # Criar o produto
                Produto.objects.create(
                    nome=nome,
                    descricao=descricao,
                    preco_venda=preco_venda,
                    preco_custo=preco_custo,
                    quantidade=quantidade,
                    unidade_medida=unidade_medida,
                    codigo_barras=codigo_barras,
                    categoria=categoria
                )

        self.stdout.write(self.style.SUCCESS('Produtos inseridos com sucesso!'))
